//Versão preliminar para obtenção de uma banda Jday (com o dia juliano) da imagem utilizada na geração do NBR.

/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var area = ee.FeatureCollection("users/AnaFreitas/flona_resex");
/***** End of imports. If edited, may not auto-convert in the playground. *****/
//var area = ee.FeatureCollection("users/AnaFreitas/AREA").geometry();
//Map.addLayer(area)

//máscara de nuvem
function maskCloudSR(image) {
 // Bits 3 and 5 are cloud shadow and cloud, respectively.
  var cloudShadowBitMask = 1 << 3;
  var cloudsBitMask = 1 << 5;

  //Get the pixel QA band.
  var qa = image.select('pixel_qa');

  // Both flags should be set to zero, indicating clear conditions.
  var mask = qa.bitwiseAnd(cloudShadowBitMask).eq(0)
      .and(qa.bitwiseAnd(cloudsBitMask).eq(0));

  // Return the masked image, scaled to reflectance, without the QA bands.
  return image.updateMask(mask)//.divide(10000)
      //.select("B[0-11]*")
      .copyProperties(image, ["system:time_start"]);
}

//banda Dia Juliano
function addDateBand(img){
  var d = ee.Date(img.get('system:time_start'));
  var day = d.getRelative('day','year');
  //var d2 = y.add(d.getFraction('year'))
  return img.addBands(ee.Image.constant(day).int().select([0],['Jday'])).copyProperties(img, ["system:time_start"]);
} 

//cálculo do NBR
function computeNBR(img){
  return img.addBands(img.normalizedDifference(['B4','B7']).select([0],['NBR'])).copyProperties(img, ["system:time_start"]);
}

//Função de corte
function clipCollec(img){
  return ee.Image(img).clip(area).copyProperties(img, ["system:time_start"]);
}

//Função para extração das datas
function extractDates(col){
  function formatDate(date){
  return ee.Date(date).format('YYYY-MM-dd')}
  var datesList=ee.List(col.aggregate_array('system:time_start'));
  var datesListFmt=datesList.map(formatDate);
  return datesListFmt;
}

// definir recorte temporal
var ini=ee.Date("1990-01-01");
var fin=ee.Date("1990-06-30");

// buscar coleção da imagem
var dataset= ee.ImageCollection("LANDSAT/LT05/C01/T1_SR")
            .filterDate(ini,fin)
            .filterBounds(area)
            .map(maskCloudSR)
            .map(computeNBR)
            .map(addDateBand)
            .map(clipCollec);
print('dataset', dataset);

//Seleciona os componentes da coleção a serem unidos em uma única imagem
var nbr = dataset.select('NBR', 'Jday').min();
print(nbr);
Map.addLayer(nbr);
// para cada valor mínimo de NBR, pegar o valor relativo de Jday

// Export the image, specifying scale and region.
Export.image.toDrive({
  image: nbr,
  description: 'NBR_06_90',
  folder:"Cicatrizes_UCs",
  scale: 30,
  region: area,
  fileFormat: 'GeoTIFF'
});
